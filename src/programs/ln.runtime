/make a link
let src_path_str $0
let link_path_str $1
jeq $src_path_str $nil print_error_invalid_name
jeq $link_path_str $nil print_error_invalid_name

let err_param $link_path_str
lib 'util.get_path_by_str' $link_path_str dest_path
pop $dest_path link_file_name
/ check dest path valid
lib 'util.get_real_path' $dest_path dest_path
lib 'util.verify_path' $dest_path 0 is_valid_path
jeq $is_valid_path 0 print_error_invalid_path

/ check dest not exists
psh $dest_path $link_file_name
lib 'util.verify_path' $dest_path 1 file_exists
jeq $file_exists 1 print_error_exists
pop $dest_path link_file_name

lib 'util.get_path_by_str' $link_path_str 1 1 dest_path

let link_meta []
psh $link_meta 'lnk'
psh $link_meta $src_path_str
let link_content []
psh $link_content $link_meta
lib 'os.write_file' $dest_path $link_file_name $link_content
jmp done

#copy_as_file
lib 'os.write_file' $dest_path $dest_file_name $file_data
jmp done

#print_error_src_dir
prt 'ERR ' ''
prt $src_path_str ''
prt ' is a directory (not copied)'
jmp done
#print_error_invalid_name
prt 'USAGE cp source_file target_file/directory'
jmp done
#print_error_invalid_path
prt 'ERR No such file/directory: ' ''
prt $err_param
jmp done
#print_error_exists
prt 'ERR File/directory exists: ' ''
prt $err_param
jmp done

#done
