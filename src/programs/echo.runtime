/ display a line of text
ife $0 $nil
 jmp end
fin

let args []
psh $args $0 $1 $2 $3 $4 $5 $6 $7
let i 0
#loop
get $args $i string
jeq $string $nil end
get $string 0 fst_char
ife $fst_char '$'
 pol $string _
 lib 'os.get_env_var' $string string
fin

ife $string $nil
 let string ''
fin

ifg $i 0
 prt ' ' ''
fin
prt $string ''
add i $i 1
jmp loop

/ ife $p '>'
/  / write to file
/  pol $_tokens f
/  ife $f $nil
/   cal print_error 'File name missing'
/  els
/   cal get_current_dir
/   let curr_dir $ret
/   get $curr_dir $f fd
/   prt $fd
/    ife $fd $nil
/     put $curr_dir $f $s
/    els
/     prt 'File/directory exists, overwrite? Y/n'
/     inp ans
/     jeq $ans 'y' overwrite
/     jeq $ans 'Y' overwrite
/     jeq $ans '' overwrite
/     jmp skip_ow
/     #overwrite
/     put $curr_dir $f $s
/     #skip_ow
/    fin
/  fin
/ fin
/ ife $p '>>'
/  / append to file
/  pol $_tokens f
/  ife $f $nil
/   cal print_error 'File name missing'
/   jmp end
/  els
/   cal get_current_dir
/   let curr_dir $ret
/   get $curr_dir $f fc
/   ife $fc $nil
/    put $curr_dir $f $s
/   els
/    typ _ft $fc
/    ife $_ft 'str'
/     add fc $fc '\n'
/     add fc $fc $s
/     put $curr_dir $f $fc
/    els
/     cal print_error 'Can only write to a raw file'
/     jmp end
/    fin
/   fin
/  fin
/ fin

#end
prt ''
